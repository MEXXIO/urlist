server {
    listen       80;
    server_name  www.urli.st;

    if ($host ~* ^www\.(.*)) {
        rewrite ^(.*)$ http://urli.st$1 permanent;
    }
}

server {
    listen       80;
    listen       443 ssl;
    server_name  urli.st 178.79.175.97 doner.local 127.0.0.1;

    ssl_certificate /etc/nginx/certs/urlist.pem;
    ssl_certificate_key /etc/nginx/certs/urlist.key;

    access_log /var/log/nginx/urlist-access.log combined;
    error_log off;

    include /etc/nginx/conf.d/gzip.conf.fragment;

    location /from_facebook/ {
        rewrite ^/from_facebook/$ http://static.urli.st/facebook_redirect.html;
    }

    location /i/ {
        alias /srv/directory/;
        expires 1d;
        autoindex on;
    }

    location /media/custom-list-images {
        rewrite  ^/custom-list-images/(.*)$  http://commondatastorage.googleapis.com/custom-list-images/$1 break;
    }

    location /media/custom-profile-images {
        rewrite  ^/media/custom-profile-images/(.*)$  http://commondatastorage.googleapis.com/custom-profile-images/$1 break;
    }

    location /media/profile-images {
        rewrite  ^/media/profile-images/(.*)$  http://commondatastorage.googleapis.com/custom-profile-images/$1 break;
    }

    location /media/profile_images {
        rewrite  ^/media/profile_images/(.*)$  http://commondatastorage.googleapis.com/custom-profile-images/$1 break;
    }

    location /img-v0.6 {
        rewrite     ^/img-v0.6/(.*)$ http://static.urli.st/img-v0.6/$1 break;
    }


    location /favicon.ico {
        alias /srv/static/favicon.png;
    }


    location /api/embed {
        if ($request_method = OPTIONS ) {
            add_header Access-Control-Allow-Origin "http://localhost:9999";
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            add_header Access-Control-Allow-Headers "X-Requested-With";
            add_header Access-Control-Allow-Credentials "true";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 200;
        }

        rewrite            ^/api/(.*)$ /$1 break;

        proxy_pass         http://embed;

        include /etc/nginx/conf.d/proxy.conf.fragment;
    }


    location /api {
        rewrite            ^/api/(.*)$ /$1 break;

        proxy_pass         http://127.0.0.1:9090/;

        include /etc/nginx/conf.d/proxy.conf.fragment;
    }

    location /__fetch {
        rewrite            ^/__fetch/(.*)$ /$1 break;

        proxy_pass         http://fetch;

        include /etc/nginx/conf.d/proxy.conf.fragment;
    }

    location /widget {
        rewrite            ^/widget/(.*)$ /$1 break;

        proxy_pass         http://widget;

        include /etc/nginx/conf.d/proxy.conf.fragment;
    }

    location /urlist-gonna-rule-the-world-because-we-have-a-fabio-picture-in-the-office {
        rewrite            ^/widget/(.*)$ /$1 break;

        proxy_pass         http://127.0.0.1:8282/;

        include /etc/nginx/conf.d/proxy.conf.fragment;
    }

    location / {
        proxy_pass         http://127.0.0.1:9999/;

        ### SEO Redirection

        # Facebook Crawler
        if ($http_user_agent ~ "facebookexternalhit") {
            proxy_pass         http://seo;
        }

        # Google Holy Crawler
        if ($http_user_agent ~ "Google") {
            proxy_pass         http://seo;
        }

        # Urlist Python
        if ($remote_addr = 151.236.218.201) {
            set $urlistUa A;
        }

        if ($http_user_agent ~ "python-request") {
            set $urlistUa "${urlistUa}B";

        }
        #

        if ($urlistUa = AB) {
            proxy_pass         http://seo;
        }

        ### End SEO Redirection

        include /etc/nginx/conf.d/proxy.conf.fragment;
    }


    error_page 503 @maintenance;

    location @maintenance {
        root /srv/www/maintenance/;
        rewrite (.*)$ /index.html break;
    }
}

server {
    server_name 127.0.0.2;

    location /nginx_status {
        stub_status on;
        allow 127.0.0.1;
        deny all;
    }
}
